!function(r){var n={};function e(s){if(n[s])return n[s].exports;var t=n[s]={i:s,l:!1,exports:{}};return r[s].call(t.exports,t,t.exports,e),t.l=!0,t.exports}e.m=r,e.c=n,e.d=function(r,n,s){e.o(r,n)||Object.defineProperty(r,n,{configurable:!1,enumerable:!0,get:s})},e.r=function(r){Object.defineProperty(r,"__esModule",{value:!0})},e.n=function(r){var n=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(n,"a",n),n},e.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},e.p="",e(e.s="./plugins/core/send-money-page/send-money-page.js")}({"./plugins/core/send-money-page/send-money-page.js":
/*!*********************************************************!*\
  !*** ./plugins/core/send-money-page/send-money-page.js ***!
  \*********************************************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_qora_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/qora/constants.js */ "./src/qora/constants.js");\n\r\n\r\nclass SendMoneyPage extends Polymer.Element {\r\n    static get is() {\r\n        return "send-money-page";\r\n    }\r\n    static get properties() {\r\n        return {\r\n            addresses: {\r\n                type: Array,\r\n                value: []\r\n            },\r\n            // fee: {\r\n            //     type: Number,\r\n            //     value: 1\r\n            // },\r\n            amount: {\r\n                type: Number\r\n            },\r\n            errorMessage: {\r\n                type: String,\r\n                value: ""\r\n            },\r\n            sendMoneyLoading: {\r\n                type: Boolean,\r\n                value: false\r\n            },\r\n            data: {\r\n                type: Object,\r\n                value: {}\r\n            },\r\n            addressesInfo: {\r\n                type: Object,\r\n                value: {}\r\n            },\r\n            selectedAddress: {\r\n                type: Object,\r\n                value: {}\r\n            },\r\n            selectedAddressInfo: {\r\n                type: Object,\r\n                value: {},\r\n                computed: "_getSelectedAddressInfo(addressesInfo, selectedAddress)"\r\n            },\r\n            addressesUnconfirmedTransactions: {\r\n                type: Object,\r\n                value: {}\r\n            },\r\n            addressInfoStreams: {\r\n                type: Object,\r\n                value: {}\r\n            },\r\n            unconfirmedTransactionStreams: {\r\n                type: Object,\r\n                value: {}\r\n            },\r\n            maxWidth: {\r\n                type: String,\r\n                value: "600"\r\n            }\r\n        }\r\n    }\r\n\r\n    static get observers() {\r\n        return [\r\n            // "_setSelectedAddressInfo(selectedAddress.*, addressesInfo)"\r\n        ]\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    _floor(num) {\r\n        return Math.floor(num);\r\n    }\r\n\r\n    _checkAmount() {\r\n        this.validAmount = this.amount <= this.selectedAddress.balance\r\n        // if (this.amount > this.selectedAddress.balance - this.fee || this.amount <= 0) {\r\n        //     this.validAmount = true;\r\n        // }\r\n        // else {\r\n        //     this.validAmount = false;\r\n        // }\r\n    }\r\n\r\n    textColor(color) {\r\n        return color == \'light\' ? \'rgba(255,255,255,0.7)\' : \'rgba(0,0,0,0.87)\'\r\n    }\r\n\r\n    async _sendMoney(e) {\r\n        var amount = this.amount * Math.pow(10, 8);\r\n        var recipient = this.recipient;\r\n        // var fee = this.fee\r\n\r\n        // Check for valid...^\r\n\r\n        this.sendMoneyLoading = true;\r\n\r\n        console.log(this.selectedAddress)\r\n\r\n        let lastRef = await this.parentWimp.request("qoraApiCall", {\r\n            data: {\r\n                type: "api",\r\n                url: `addresses/lastreference/${this.selectedAddress.address}/unconfirmed`\r\n            }\r\n        })\r\n        lastRef = lastRef.data\r\n\r\n        this.parentWimp.request("createTransaction", {\r\n            data: {\r\n                type: 2,\r\n                nonce: this.selectedAddress.nonce,\r\n                params: {\r\n                    recipient,\r\n                    amount,\r\n                    lastReference: lastRef\r\n                    // ,\r\n                    // fee\r\n                }\r\n            }\r\n        }).then(response => {\r\n            const responseData = JSON.parse(response.data)\r\n            console.log("Yay: ", response)\r\n            if(!responseData.reference) {\r\n                throw(`Error! ${_src_qora_constants_js__WEBPACK_IMPORTED_MODULE_0__["ERROR_CODES"][responseData]}. Error code ${responseData}`)\r\n            }\r\n            this.successMessage = response.data\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.errorMessage = err\r\n        })\r\n    }\r\n\r\n    _getSelectedAddressInfo(addressesInfo, selectedAddress) {\r\n        return this.addressesInfo[selectedAddress.address]\r\n    }\r\n\r\n    ready() {\r\n        super.ready();\r\n\r\n        this.coreWimp = new Wimp("core", window.parent)\r\n\r\n        this.parentWimp = new Wimp(window.parent)\r\n\r\n        this.parentWimp.ready(() => {\r\n            this.parentWimp.listen("Selected address", selectedAddress => {\r\n                console.log(selectedAddress)\r\n                this.selectedAddress = {}\r\n                this.selectedAddress = selectedAddress\r\n                const addr = selectedAddress.address\r\n\r\n                this.coreWimp.ready(() => {\r\n                    if (!this.addressInfoStreams[addr]) {\r\n                        this.addressInfoStreams[addr] = this.coreWimp.listen(`address/${addr}`, addrInfo => {\r\n                            console.log("Send money page received", addrInfo)\r\n                            this.set(`addressesInfo.${addr}`, addrInfo)\r\n                            // Ahh....actually if no balance....no last reference and so you can\'t send money\r\n                            addrInfo.balance = addrInfo.balance || {\r\n                                total: {\r\n                                    0: 0,\r\n                                    1: 0\r\n                                }\r\n                            }\r\n                            const addressesInfoStore = this.addressesInfo\r\n                            this.addressesInfo = {}\r\n                            this.addressesInfo = addressesInfoStore\r\n                        })\r\n                    }\r\n                       if (!this.unconfirmedTransactionStreams[addr]){\r\n                           this.unconfirmedTransactionStreams[addr] = this.coreWimp.listen(`unconfirmedOfAddress/${addr}`, unconfirmedTransactions => {\r\n                               this.addressesUnconfirmedTransactions[addr] = unconfirmedTransactions\r\n                           })\r\n                       }\r\n\r\n                })\r\n            })\r\n        })\r\n\r\n        Wimp.init();\r\n    }\r\n}\r\n\r\nwindow.customElements.define(SendMoneyPage.is, SendMoneyPage);\n\n//# sourceURL=webpack:///./plugins/core/send-money-page/send-money-page.js?')},"./src/qora/constants.js":
/*!*******************************!*\
  !*** ./src/qora/constants.js ***!
  \*******************************/
/*! exports provided: TX_TYPES, ERROR_CODES, QORA_DECIMALS, PROXY_URL, STATIC_SALT, ADDRESS_VERSION, KDF_THREADS, STATIC_BCRYPT_SALT */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TX_TYPES", function() { return TX_TYPES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ERROR_CODES", function() { return ERROR_CODES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QORA_DECIMALS", function() { return QORA_DECIMALS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PROXY_URL", function() { return PROXY_URL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC_SALT", function() { return STATIC_SALT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ADDRESS_VERSION", function() { return ADDRESS_VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KDF_THREADS", function() { return KDF_THREADS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC_BCRYPT_SALT", function() { return STATIC_BCRYPT_SALT; });\n\r\nconst TX_TYPES = {\r\n    1: "Genesis",\r\n    2: "Payment",\r\n    \r\n    3: "Name registration",\r\n    4: "Name update",\r\n    5: "Sell name",\r\n    6: "Cancel sell name",\r\n    7: "Buy name",\r\n    \r\n    8: "Create poll",\r\n    9: "Vote in poll",\r\n    \r\n    10: "Arbitrary",\r\n    \r\n    11: "Issue asset",\r\n    12: "Transfer asset",\r\n    13: "Create asset order",\r\n    14: "Cancel asset order",\r\n    15: "Multi-payment transaction",\r\n    \r\n    16: "Deploy AT",\r\n    \r\n    17: "Message",\r\n\r\n    18: "Delegation",\r\n    19: "Supernode",\r\n    20: "Airdrop"\r\n}\r\n\r\nconst ERROR_CODES = {\r\n    1: "Valid OK",\r\n    2: "Invalid address",\r\n    3: "Negative amount",\r\n    4: "Nagative fee",\r\n    5: "No balance",\r\n    6: "Invalid reference",\r\n\r\n    7: "Invalid time length",\r\n    8: "Invalid value length",\r\n    9: "Name already registered",\r\n\r\n    10: "Name does not exist",\r\n    11: "Invalid name owner",\r\n    12: "Name already for sale",\r\n    13: "Name not for sale",\r\n    14: "Name buyer already owner",\r\n    15: "Invalid amount",\r\n    16: "Invalid seller",\r\n\r\n    17: "Name not lowercase",\r\n\r\n    18: "Invalid description length",\r\n    19: "Invalid options length",\r\n    20: "Invalid option length",\r\n    21: "Duplicate option",\r\n    22: "Poll already created",\r\n    23: "Poll already has votes",\r\n    24: "Poll does not exist",\r\n    25: "Option does not exist",\r\n    26: "Already voted for that option",\r\n    27: "Invalid data length",\r\n\r\n    28: "Invalid quantity",\r\n    29: "Asset does not exist",\r\n    30: "Invalid return",\r\n    31: "Have equals want",\r\n    32: "Order does not exist",\r\n    33: "Invalid order creator",\r\n    34: "Invalid payments length",\r\n    35: "Negative price",\r\n    36: "Invalid creation bytes",\r\n    37: "Invalid tags length",\r\n    38: "Invalid type length",\r\n    \r\n    40: "Fee less required",\r\n    \r\n    41: "Invalid raw data",\r\n    \r\n    42: "Delegation already exists",\r\n    43: "Supernode invalid",\r\n    \r\n    44: "Super node already exists",\r\n    \r\n    45: "Spending disallowed",\r\n    \r\n    10000: "AT_ERROR",\r\n\r\n    1000: "Not yet released.."\r\n}\r\n\r\nconst QORA_DECIMALS = 100000000\r\n\r\nconst PROXY_URL = "/proxy/" // Proxy for api calls\r\n\r\n//const ADDRESS_VERSION = 58;  // Q for Qora\r\nconst ADDRESS_VERSION = 46;  // K for Karma\r\n\r\n// Used as a salt for all qora addresses. Salts used for storing your private keys in local storage will be randomly generated\r\nconst STATIC_SALT = new Uint8Array([54, 190, 201, 206, 65, 29, 123, 129, 147, 231, 180, 166, 171, 45, 95, 165, 78, 200, 208, 194, 44, 207, 221, 146, 45, 238, 68, 68, 69, 102, 62, 6])\r\nconst BCRYPT_ROUNDS = 10 // Remember that the total work spent on key derivation is BCRYPT_ROUNDS * KDF_THREADS\r\nconst BCRYPT_VERSION = "2a"\r\nconst STATIC_BCRYPT_SALT = `$${BCRYPT_VERSION}$${BCRYPT_ROUNDS}$IxVE941tXVUD4cW0TNVm.O`\r\n// const PBKDF2_ROUNDS = Math.pow(2,17) // Deprecated\r\n\r\nconst KDF_THREADS = 16 // 16 Threads seems like a good number :)\r\n\r\n\r\n\r\n//const TX_TYPES =  {\r\n//    GENESIS_TRANSACTION: 1,\r\n//    PAYMENT_TRANSACTION: 2,\r\n//\r\n//    REGISTER_NAME_TRANSACTION: 3,\r\n//    UPDATE_NAME_TRANSACTION: 4,\r\n//    SELL_NAME_TRANSACTION: 5,\r\n//    CANCEL_SELL_NAME_TRANSACTION: 6,\r\n//    BUY_NAME_TRANSACTION: 7,\r\n//\r\n//    CREATE_POLL_TRANSACTION: 8,\r\n//    VOTE_ON_POLL_TRANSACTION: 9,\r\n//\r\n//    ARBITRARY_TRANSACTION: 10,\r\n//\r\n//    ISSUE_ASSET_TRANSACTION: 11,\r\n//    TRANSFER_ASSET_TRANSACTION: 12,\r\n//    CREATE_ORDER_TRANSACTION: 13,\r\n//    CANCEL_ORDER_TRANSACTION: 14,\r\n//    MULTI_PAYMENT_TRANSACTION: 15,\r\n//\r\n//    DEPLOY_AT_TRANSACTION: 16,\r\n//\r\n//    MESSAGE_TRANSACTION: 17\r\n//};\n\n//# sourceURL=webpack:///./src/qora/constants.js?')}});